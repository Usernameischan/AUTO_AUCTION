1. 파일 구성 및 저장 위치

1.1 데이터베이스 연결 및 데이터 수집 코드
파일명: db_manager.py
설명: auction_no를 입력받아, 관련 데이터를 auction, bond, issue_company 테이블에서 가져오는 기능


1.2 HTML 템플릿 파일
폴더명: templates
파일명: auction_template.html
설명: HTML의 템플릿 역할을 하며, Jinja2에서 불러와 HTML 파일을 생성

1.3 HTML 생성 함수
파일명: html_generator.py
설명: db_manager.py에서 데이터 로딩 및 템플릿과 바인딩하여 최종 HTML 파일을 생성.


1.4 FTP 업로드 코드
파일명: ftp_uploader.py
설명: 생성된 HTML 파일을 FTP 서버에 업로드.


1.5 메인 실행 스크립트
파일명: main.py
설명: 모든 모듈을 불러와 경매번호 입력 시 HTML을 생성하고, FTP 업로드까지 완료하는 메인.


2. 구동 순서
2-1. 데이터베이스 구성 및 db_manager.py 설정:
db_manager.py 파일에 데이터베이스 정보를 입력한 뒤 테스트로 데이터를 불러옴

2-2. HTML 템플릿 생성:
templates/auction_template.html 파일을 수정하여 고객사별 커스터마이징이 가능하도록 디자인.

2-3. HTML 생성 테스트:
html_generator.py 파일에서 generate_html 함수를 호출하여 HTML 파일이 올바르게 생성되는지 확인.

2-4. FTP 업로드 테스트:
ftp_uploader.py 파일에서 upload_to_ftp 함수를 테스트하여 파일이 올바르게 전송되는지 확인

2-5. 메인 실행:
main.py 스크립트를 실행하여 경매 번호를 기반으로 HTML 생성 및 FTP 업로드까지 자동화가 정상 작동하는지 최종 검증